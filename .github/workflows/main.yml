name: Push keys to Lokalise

on:
  [push, repository_dispatch]
  # Only run workflow for pushes to specific branches
  # branches:
  #   - master
  # Only run workflow when matching files are changed
  # paths:
  # - "src/locales/*/messages.po"

jobs:
  #upload:
  # runs-on: ubuntu-latest
  # steps:
  #   - uses: actions/checkout@v1
  #   - uses: igorDolzh/lokalise-file-push@0.0.6
  #     with:
  #       # Api token for the Lokalise account
  #       # with read/write access to the project
  #       api-token: ${{ secrets.LOCALIZE_TOKEN }}

  #       # ID of the project to sync
  #       project-id: 384372155e0a066e6ef735.76487515

  #       # The relative directory where language files will be found
  #       file-path: src/locales/%LANG_ISO%/messages.po

  lint:
    name: LinguiJs test
    env:
      CI: "true"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "10.x"
          registry-url: "https://npm.pkg.github.com"
      - name: Install dependencies
        if: steps.lingui_modules_cache.outputs.cache-hit != 'true'
        run: yarn add babel-core@^7.0.0-bridge.0 @babel/core --frozen-lockfile
      # - name: Extracting messages
      #   run: npx lingui extract
      # - name: Checking for new messages
      #   run: git status --porcelain | grep . && exit 1 || exit 0
      # - name: Commiting messages
      #   env:
      #     SECRET_TOKEN: ${{ secrets.SECRET_TOKEN }}
      #   if: failure()
      #   run: |
      #     git config --global user.email "igor.techweb@gmail.com"
      #     git config --global user.name "Igor Dolzhenkov"
      #     git add .
      #     git commit -m "Locales updat6"
      #     git push https://igorDolzh:$SECRET_TOKEN@github.com/${{ github.repository }} HEAD:"${GITHUB_REF:11}"
      - uses: actions/github-script@0.3.0
        id: start-check
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          previews: "antiope-preview"
          script: |
            const result = await github.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha
            })
            return result.data.check_runs.find(run => run.name === 'Type coverage').id
      - name: Commiting messages
        uses: actions/github-script@0.3.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            await github.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: '${{steps.start-check.outputs.result}}',
              conclusion: 'success',
              output: {
                title: '${{steps.type-coverage.outputs.coverage}}',
                summary: '% of identifiers whose type is not any',
                actions: [{
                  label: 'Fix this',
                  description: 'Let us fix that for you',
                  identifier: 'fix_errors'
                }]
              }
            })
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 1
  #     - name: Cache node modules
  #       id: node_modules_cache
  #       uses: actions/cache@v1
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}-node_modules_cache
  #     - name: Setup node
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: "10.x"
  #         registry-url: "https://npm.pkg.github.com"
  #     - name: Install dependencies
  #       if: steps.node_modules_cache.outputs.cache-hit != 'true'
  #       run: yarn --frozen-lockfile --ignore-engines --ignore-optional --non-interactive --silent --ignore-scripts --production=false
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.GITHUB_REGISTRY_TOKEN }}
  #     - name: Extracting messages
  #       run: yarn extract
  #     - name: Checking for new messages
  #       run: git status --porcelain | grep . && exit 1 || exit 0
  #     - name: Commiting messages
  #       if: failure()
  #       run: |
  #         git config --global user.email "igor.techweb@gmail.com"
  #         git config --global user.name "Igor Dolzhenkov"
  #         git add .
  #         git commit -m "Locales update"
  #         git push
  #     - name: Push changes
  #       uses: ad-m/github-push-action@master
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
